<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!--1、 加载属性文件
		mybatis可以使用properties来引入外部properties配置文件的内容；
		resource：引入类路径下的资源
		url：引入网络路径或者磁盘路径下的资源-->
	<properties resource="db.properties">
		<!--properties中还可以配置一些属性名和属性值  -->
		<!-- <property name="jdbc.driver" value=""/> -->
	</properties>
	<!--2、 全局配置参数，需要时再设置 -->
	<!-- <settings>
	
	</settings> -->
	
	<!--3、 别名定义 -->
	<typeAliases>
		<!-- 针对单个别名定义
		type：类型的路径
		alias：别名 -->
		<!-- <typeAlias type="cn.fly.domain.User" alias="user"/> -->
		<!-- 批量别名定义 
		指定包名，mybatis自动扫描包中的domain类，自动定义别名，别名就是类名（首字母大写或小写都可以）
		-->
		<package name="cn.fly.domain"/>
	</typeAliases>
	
	<!--4、 和spring整合后 environments 此运行环境配置将废除-->
	<environments default="development">
		<environment id="development">
		<!-- 使用jdbc事务管理，事务控制由mybatis-->
			<transactionManager type="JDBC" />
		<!-- 数据库连接池，由mybatis管理-->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	<!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 -->
	<!-- 5、mappers：将sql映射注册到全局配置中 -->
	<mappers>
		<mapper resource="sqlmapper/UserMapper.xml"/>
		
		<!--通过resource方法一次加载一个映射文件 -->
		<!-- <mapper resource="mapper/UserMapper.xml"/> -->
		
		<!-- 通过mapper接口加载单个 映射文件
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<!-- <mapper class="cn.itcast.mybatis.mapper.UserMapper"/> -->
		
		<!-- 批量加载mapper
		指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<package name="cn.itcast.mybatis.mapper"/>
	</mappers>
	
</configuration>
