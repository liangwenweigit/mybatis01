<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，
注意：使用mapper代理方法开发，namespace有特殊重要的作用，
      namespace等于mapper（UserMapper）接口全路径名
-->
<mapper namespace="com.fly.mapper.UserMapper">
     <!--1根据id查询一个  -->
     <select id="findUser" parameterType="int" resultType="com.fly.domain.User">
         select * from user where id = #{id}
     </select>
     <!--2添加用户  -->
     <insert id="addUser" parameterType="com.fly.domain.User">
         insert into user(username,sex,birthday,address) 
         values(#{username},#{sex},#{birthday},#{address})
     </insert>
     <!--3删除用户  -->
     <delete id="deleteUser" parameterType="int">
         delete from user where id = #{id}
     </delete>
     <!--4更新用户  -->
     <update id="updateUser" parameterType="com.fly.domain.User">
         update user set username=#{username},sex=#{sex},
         birthday=#{birthday},address=#{address} where id = #{id}
     </update>
     <!--5迷糊查询  -->
     <select id="findUserByName" parameterType="String" resultType="com.fly.domain.User">
         select * from user where username like #{username}
     </select>
     
     
	<!--下面的是综合查询 用包装类 UserQueryV.java-->
	<!--6用户综合查询  -->
	<select id="findUserList" parameterType="com.fly.domain.UserQueryV" resultType="com.fly.domain.User">
          select * from user where sex=#{userCustom.sex} and username like #{userCustom.like}
	</select>
	
	<!-- 7聚合函数 -->
	<select id="findUserCount" parameterType="com.fly.domain.UserQueryV" resultType="int">
          select count(*) from user where sex=#{userCustom.sex} and username like #{userCustom.like}
	</select>
	
	<!--8ResultMap:指定定义的resultMap的id。如果resultMap在其他mapper文件 需要+namespace  -->
	<select id="findUserResultMap" parameterType="int" resultMap="userResultMap">
	      select id id_,username username_ from user where id = #{id}
	</select>
	<!--定义result  -->
	<!-- 定义resultMap
	将SELECT id id_,username username_ FROM USER 和User类中的属性作一个映射关系
	type：resultMap最终映射的java对象类型,可以使用别名
	id：对resultMap的唯一标识
	 -->
     <resultMap type="com.fly.domain.User" id="userResultMap">
	 	<!-- id表示查询结果集中唯一标识 
	 	column：查询出来的列名
	 	property：type指定的pojo类型中的属性名
	 	最终resultMap对column和property作一个映射关系 （对应关系）
	 	-->
	 	<id column="id_" property="id"/>
	 	<!-- 
	 	result：对普通名映射定义
	 	column：查询出来的列名
	 	property：type指定的pojo类型中的属性名
	 	最终resultMap对column和property作一个映射关系 （对应关系）
	 	 -->
	 	<result column="username_" property="username"/>
	 </resultMap>
	 
	 <!--9动态sql 用户综合查询  -->
	<select id="findUserListSQL" parameterType="com.fly.domain.UserQueryV" resultType="com.fly.domain.User">
          select * from user
          <!--此where可以自动去除条件中第一个and  -->
         <where> 
          <if test="userCustom!=null">
             <if test="userCustom.sex!=null and userCustom.sex!=''">
             and sex=#{userCustom.sex} 
             </if>
             <if test="userCustom.like!=null and userCustom.like!=''">
             and username like #{userCustom.like}
             </if>
          </if>
          </where> 
	</select>
	
	<!--10动态sql聚合函数  -->
	<select id="findUserCountSQL" parameterType="com.fly.domain.UserQueryV" resultType="int">
          select count(*) from user
           <!--此where可以自动去除条件中第一个and  -->
         <where> 
          <if test="userCustom!=null">
             <if test="userCustom.sex!=null and userCustom.sex!=''">
             and sex=#{userCustom.sex} 
             </if>
             <if test="userCustom.like!=null and userCustom.like!=''">
             and username like #{userCustom.like}
             </if>
          </if>
          </where> 
	</select> 
	
	<!--11 定义sql片段
	id：sql片段的唯 一标识
	经验：是基于单表来定义sql片段，这样话这个sql片段可重用性才高
	在sql片段中不要包括 where-->
	<sql id="query_user_where">
	      <if test="userCustom!=null">
             <if test="userCustom.sex!=null and userCustom.sex!=''">
             and sex=#{userCustom.sex} 
             </if>
             <if test="userCustom.like!=null and userCustom.like!=''">
             and username like #{userCustom.like}
             </if>
          </if>
	</sql>
	
		 <!--11动态sql 用户综合查询  之 引用sql片段 -->
	<select id="findUserListSQLpd" parameterType="com.fly.domain.UserQueryV" resultType="com.fly.domain.User">
          select * from user
          <where>
             <!-- 引用sql片段  -->
             <include refid="query_user_where"></include>
          </where>
    </select>     
	
</mapper>


